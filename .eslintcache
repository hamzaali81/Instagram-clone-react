[{"/home/hamzaali/react-work/my-app/src/index.js":"1","/home/hamzaali/react-work/my-app/src/App.js":"2","/home/hamzaali/react-work/my-app/src/reportWebVitals.js":"3","/home/hamzaali/react-work/my-app/src/Components/Post/Post.js":"4","/home/hamzaali/react-work/my-app/src/firebase.js":"5","/home/hamzaali/react-work/my-app/src/ImageUpload.js":"6"},{"size":500,"mtime":1609789446773,"results":"7","hashOfConfig":"8"},{"size":7045,"mtime":1612633459086,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609789446773,"results":"10","hashOfConfig":"8"},{"size":2607,"mtime":1612633852920,"results":"11","hashOfConfig":"8"},{"size":1214,"mtime":1611163812842,"results":"12","hashOfConfig":"8"},{"size":2071,"mtime":1612556276954,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"e53t2b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/home/hamzaali/react-work/my-app/src/index.js",[],["28","29"],"/home/hamzaali/react-work/my-app/src/App.js",[],"/home/hamzaali/react-work/my-app/src/reportWebVitals.js",[],"/home/hamzaali/react-work/my-app/src/Components/Post/Post.js",["30","31","32","33"],"/home/hamzaali/react-work/my-app/src/firebase.js",[],"/home/hamzaali/react-work/my-app/src/ImageUpload.js",["34"],"import React, { useState,useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { db,storage } from './firebase';\nimport firebase from \"firebase\";\nimport './imageUpload.css';\n\n\nexport default function ImageUpload({username}) {\n    console.log('props',username);\n    const [image, setImage] = useState('');\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e)=> {\n        if(e.target.files[0]){\n            console.log(e.target.files[0]);\n            setImage(e.target.files[0])\n        }\n    }\n \n    const handleUpload = () => {\n\n// Upload the file and metadata\n  var uploadTask = storage.ref(`images/${image.name}`).put(image);\n  uploadTask.on('state_changed', \n  (snapshot) => {\n      //Progress Function\n    var progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n    console.log('Upload is ' + progress + '% done');\n    setProgress(progress)\n    \n  }, \n  (error) => {\n  //Error function\n  console.log(error);\n  alert(error.message);\n  },\n  ()=> {\n  // complete function ...\n  storage\n  .ref(\"images\")\n  .child(image.name)\n  .getDownloadURL()\n  .then((url) => {\n  // post image inside db\n  console.log('File available at', url);\n   db.collection(\"posts\").add({\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    caption: caption,\n    imageUrl: url,\n    username: username\n   });\n   setProgress(0);\n   setCaption(\"\");\n   setImage(null);\n})\n  }\n\n);\n}\n\n\n    return (\n        <div className=\"imageUpload\">\n            {/* \n      I want to have \n      Caption input\n      File Picker\n      Post Button */}\n            {/* <h1>Image Upload</h1> */}\n            <progress className=\"imageUpload__progress\" value={progress} max=\"100\" />\n            <input type=\"text\" placeholder=\"Enter a caption....\" onChange={e=> setCaption(e.target.value)}/>\n            <input type=\"file\" onChange={handleChange} name=\"image-file\"/>\n            <Button onClick={handleUpload}>\n                Upload\n            </Button>\n        </div>\n    )\n}\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":13,"nodeType":"41","messageId":"42","endLine":4,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":28,"column":11,"nodeType":"41","messageId":"42","endLine":28,"endColumn":22},{"ruleId":"44","severity":1,"message":"45","line":42,"column":7,"nodeType":"46","endLine":42,"endColumn":15,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":52,"column":13,"nodeType":"50","endLine":52,"endColumn":78},{"ruleId":"39","severity":1,"message":"51","line":1,"column":26,"nodeType":"41","messageId":"42","endLine":1,"endColumn":35},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'stoage' is defined but never used.","Identifier","unusedVar","'postComment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comment' and 'user.displayName'. Either include them or remove the dependency array.","ArrayExpression",["54"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [comment, postId, user.displayName]",{"range":"57","text":"58"},[1190,1198],"[comment, postId, user.displayName]"]